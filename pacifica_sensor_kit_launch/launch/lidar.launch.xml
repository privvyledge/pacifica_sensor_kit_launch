<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="host_ip" default="192.168.1.10"/>
  <arg name="use_concat_filter" default="true"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="vehicle_mirror_param_file"/>
  <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <group>
    <push-ros-namespace namespace="lidar"/>

    <group>
      <!-- Quanergy M8 LIDAR -->
      <push-ros-namespace namespace="top"/>
      <include file="$(find-pkg-share common_sensor_launch)/launch/quanergy.launch.xml">
        <arg name="max_range" value="250.0"/>
        <arg name="sensor_frame" value="velodyne_top"/>
        <arg name="sensor_ip" value="192.168.1.201"/>
        <arg name="host_ip" value="$(var host_ip)"/>
        <arg name="data_port" value="2368"/>
        <arg name="scan_phase" value="300.0"/>
        <arg name="launch_driver" value="$(var launch_driver)"/>
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
        <arg name="container_name" value="pointcloud_container"/>
      </include>
    </group>

<!--    <group>-->
<!--      &lt;!&ndash; point cloud from fused front cameras &ndash;&gt;-->
<!--      <push-ros-namespace namespace="front"/>-->
<!--      <include file="$(find-pkg-share common_sensor_launch)/launch/velodyne_VLP16.launch.xml">-->
<!--        <arg name="max_range" value="5.0"/>-->
<!--        <arg name="sensor_frame" value="velodyne_left"/>-->
<!--        <arg name="sensor_ip" value="192.168.1.202"/>-->
<!--        <arg name="host_ip" value="$(var host_ip)"/>-->
<!--        <arg name="data_port" value="2369"/>-->
<!--        <arg name="scan_phase" value="180.0"/>-->
<!--        <arg name="cloud_min_angle" value="300"/>-->
<!--        <arg name="cloud_max_angle" value="60"/>-->
<!--        <arg name="launch_driver" value="$(var launch_driver)"/>-->
<!--        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>-->
<!--        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>-->
<!--        <arg name="container_name" value="pointcloud_container"/>-->
<!--      </include>-->
<!--    </group>-->

<!--    <group>-->
<!--      &lt;!&ndash; point cloud from Azure Kinect ROS driver. Note: this is unreliable/useless outdoors. &ndash;&gt;-->
<!--      <push-ros-namespace namespace="azure_points"/>-->
<!--      <include file="$(find-pkg-share common_sensor_launch)/launch/velodyne_VLP16.launch.xml">-->
<!--        <arg name="max_range" value="5.0"/>-->
<!--        <arg name="sensor_frame" value="velodyne_right"/>-->
<!--        <arg name="sensor_ip" value="192.168.1.203"/>-->
<!--        <arg name="host_ip" value="$(var host_ip)"/>-->
<!--        <arg name="data_port" value="2370"/>-->
<!--        <arg name="scan_phase" value="180.0"/>-->
<!--        <arg name="cloud_min_angle" value="300"/>-->
<!--        <arg name="cloud_max_angle" value="60"/>-->
<!--        <arg name="launch_driver" value="$(var launch_driver)"/>-->
<!--        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>-->
<!--        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>-->
<!--        <arg name="container_name" value="pointcloud_container"/>-->
<!--      </include>-->
<!--    </group>-->

    <!-- todo: add pointclouds colorized by cameras -->

    <!-- Concatenate pointclouds from multiple sensors -->
    <include file="$(find-pkg-share sample_sensor_kit_launch)/launch/pointcloud_preprocessor.launch.py">
      <arg name="base_frame" value="base_link"/>
      <arg name="use_intra_process" value="true"/>
      <arg name="use_multithread" value="true"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>
</launch>
